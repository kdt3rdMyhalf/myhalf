<head>
  <!-- 1. 카카오SDK로드 -->
  <script src="https://developers.kakao.com/sdk/js/kakao.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<style>
  .login-alert {
    visibility: hidden;
  }

  .lg-alert-view {
    display: flex;
    color: red;
  }

  .btn-login {
    color: white;
    background: #ffeac7;
    transform: translateX(-30%);
  }

  .input-block {
    margin-bottom: 20px;
  }

  .input-block label {
    font-size: 14px;
    color: #a1b4b4;
  }

  .input-block input {
    display: block;
    width: 100%;
    margin-top: 8px;
    padding-right: 15px;
    padding-left: 15px;
    font-size: 16px;
    line-height: 40px;
    color: #3b4465;
    background: white;
    border: 1px solid #cddbef;
    border-radius: 2px;
  }

  .log-btn {
    background: #ffeac7;

    width: 100%;
    font-size: 16px;
    height: 50px;
    color: black;
    text-decoration: none;
    border: none;
  }

  .log-btn-kakao {
    background: #f7e600;

    width: 100%;
    font-size: 16px;
    height: 50px;
    color: black;
    text-decoration: none;
    border: none;
  }

  .log-btn1 {
    width: 100%;
    font-size: 16px;
    height: 50px;
    color: #fff;
    text-decoration: none;
    border: none;
  }
</style>

<!-- action 주소지 / method 방법 -->
<form name="formLogin" action="/user/login" method="POST">
  <div class="input-block">
    <label for="userId2">ID</label>
    <input id="userId2" type="text" name="userId" required /><br />
  </div>
  <div class="input-block">
    <label for="userPw2">Password</label>
    <input id="userPw2" type="password" name="userPw" required /><br />
  </div>

  <button class="log-btn">로그인</button>
</form>

<!-- 카카오 로그인 버튼 -->
<a id="custom-login-btn" href="javascript:loginWithKakao()">
  <button class="log-btn-kakao">카카오로 로그인</button>
</a>

<!-- <button class="api-btn" onclick="kakaoLogout()">로그아웃</button> -->

<script type="text/javascript">
  // 2. 카카오 초기화
  Kakao.init("b990327a8294b18fbc2575189513ebe0");
  console.log(Kakao.isInitialized()); // 초기화 판단여부

  // 3. 데모버전으로 들어가서 카카오로그인 코드를 확인.
  function loginWithKakao() {
    Kakao.Auth.login({
      success: function (authObj) {
        console.log(authObj); // access토큰 값
        Kakao.Auth.setAccessToken(authObj.access_token); // access토큰값 저장

        getInfo();
      },
      fail: function (err) {
        console.log(err);
      },
    });
  }

  // 4. 엑세스 토큰을 발급받고, 아래 함수를 호출시켜서 사용자 정보를 받아옴.
  function getInfo() {
    Kakao.API.request({
      url: "/v2/user/me",
      success: async function (res) {
        console.log(res);
        // 이메일, 성별, 닉네임, 프로필이미지
        var userId = res.kakao_account.email;
        var userName = res.kakao_account.profile.nickname;
        var userImg = res.kakao_account.profile.thumbnail_image_url;

        await axios({
          method: "post",
          url: "/kakaologin",
          data: {
            userId: userId,
            userName: userName,
            userImg: userImg,
          },
        });
        console.log("email", userId, "nick", userName, "img", userImg);
        location.reload();
      },
      fail: function (error) {
        alert(
          "카카오 로그인에 실패했습니다. 관리자에게 문의하세요." +
            JSON.stringify(error)
        );
      },
    });
  }

  // 5. 로그아웃 기능 - 카카오 서버에 접속하는 엑세스 토큰을 만료, 사용자 어플리케이션의 로그아웃은 따로 진행.
  function kakaoLogout() {
    if (!Kakao.Auth.getAccessToken()) {
      alert("Not logged in.");
      return;
    }
    Kakao.Auth.logout(function () {
      alert("logout ok\naccess token -> " + Kakao.Auth.getAccessToken());
    });
  }
</script>
