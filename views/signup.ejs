<style>
  .input-block {
    margin-bottom: 20px;
  }
  .input-block label {
    font-size: 14px;
    color: #a1b4b4;
  }

  .userImg input[type="file"] {
    /* 파일 필드 숨기기 */
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }
  .input-block input {
    display: block;
    width: 100%;
    margin-top: 8px;
    padding-right: 15px;
    padding-left: 15px;
    font-size: 16px;
    line-height: 40px;
    color: #3b4465;
    border: 1px solid #cddbef;
    border-radius: 2px;
  }
  .input-button {
    padding: 8px 12px;
    outline: none;
    border: 1px solid #ffeac7;
    background-color: white;
    border-radius: 4px;
    transition: 0.3s;
    cursor: pointer;
    margin-top: 10px;
    margin-bottom: 10px;
  }

  .input-button-profile {
    padding: 8px 12px;
    outline: none;
    border: 1px solid #ffeac7;
    background-color: white;
    border-radius: 4px;
    transition: 0.3s;
    cursor: pointer;
    margin-bottom: 10px;
    display: flex;
    justify-content: center;
    margin-bottom: 20px;
  }
  .input-button-profile:hover {
    background-color: #ffeac7;
  }

  .input-button:hover {
    background-color: #ffeac7;
  }
  #register {
    background: #ffeac7;
    width: 100%;
    font-size: 16px;
    height: 50px;
    text-decoration: none;
    border: none;
  }
  .preview {
    width: 200px;
    height: 200px;
    object-fit: cover;
    display: block;
    margin: 20px auto;
  }
</style>

<form
  name="formSignup"
  action="/user/signup"
  method="POST"
  enctype="multipart/form-data"
>
  <div class="userImg">
    <input
      type="file"
      name="userImg"
      id="userImg"
      onclick="fileUpload()"
      onchange="showPreview(event);"
    />

    <div class="preview">
      <img
        id="filePreview"
        src="/static/img/profileImage.png"
        alt=""
        width="200"
      />
    </div>
    <label for="userImg" class="input-button-profile">프로필 사진 업로드</label>
  </div>
  <div class="input-block">
    <label for="userId">이메일</label>
    <input
      id="userId"
      type="email"
      name="userId"
      placeholder="이메일 형식으로 작성해주세요"
      required
    />
    <button
      class="input-button"
      type="button"
      name="userId"
      onclick="idCheck()"
    >
      중복확인
    </button>
  </div>
  <div class="idCheck"></div>
  <div class="input-block">
    <label for="password">비밀번호</label>
    <input
      id="userPw"
      pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$"
      title="비밀번호는 최소 8자리에서 최대 16자리까지 숫자, 영문, 특수문자 각 1개 이상 포함시켜 주세요."
      type="password"
      name="userPw"
      placeholder="비밀번호는 최소 8자리에서 최대 16자리까지 설정해 주세요"
      required
    />
  </div>

  <div class="input-block">
    <label for="passwordcheck">비밀번호 확인</label>
    <input
      id="userPwCheck"
      pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,16}$"
      title="패스워드 불일치"
      type="password"
      name="userPwCheck"
      required
    />
  </div>
  <div class="input-block">
    <label for="userName">이름</label>
    <input id="userName" type="text" name="userName" required />
    <button
      class="input-button"
      type="button"
      name="userName"
      onclick="nameCheck()"
    >
      중복확인
    </button>
  </div>
  <div class="input-block">
    <div class="nameCheck"></div>
  </div>
  <div class="input-block">
    <label for="userBirth">생년월일</label>
    <input id="userBirth" type="date" name="userBirth" required />
  </div>

  <!-- <img src="#" alt="" width="200"  alt="your image"> -->

  <button id="register" type="submit" class="btnSignup">회원가입</button>
</form>
<script>
  function signup() {
    var userPw = document.getElementById("userPw").value;
    var userPwCheck = document.getElementById("userPwCheck").value;

    if (userPw !== userPwCheck) {
      userPwCheck.setCustomValidity("패스워드 불일치");
    } else {
      userPwCheck.setCustomValidity("");
    }
  }
  // <!-- 아이디 중복 체크 axios -->

  function idCheck() {
    const idValue = document.querySelector("#userId").value;
    if (
      idValue === "" ||
      idValue.indexOf("@") === -1 ||
      idValue.indexOf(".") === -1
    ) {
      alert("이메일 형식으로 아이디를 입력해주세요.");
      document.querySelector("#userId").value = "";
      return;
    }

    axios({
      method: "GET",
      url: "/signup/idcheck",
      params: { idValue: idValue },
    }).then((res) => {
      console.log(res.data.result);
      if (res.data.result === false) {
        document.querySelector(".idCheck").textContent =
          "아이디 사용 가능합니다.";
        document.querySelector(".idCheck").style.color = "green";
      } else {
        document.querySelector(".idCheck").textContent =
          "사용 중인 아이디입니다.";
        document.querySelector(".idCheck").style.color = "red";
      }
    });
  }

  // 유저네임 중복 체크 axios
  function nameCheck() {
    const nameValue = document.querySelector("#userName").value;
    console.log(nameValue);
    if (nameValue === "") {
      alert("이름을 입력해주세요.");
      document.querySelector(".nameCheck").textContent = "";
      return;
    }
    axios({
      method: "GET",
      url: "/signup/namecheck",
      params: { nameValue: nameValue },
    }).then((res) => {
      console.log(res.data.result);
      if (res.data.result === false) {
        document.querySelector(".nameCheck").textContent = "사용 가능합니다.";
        document.querySelector(".nameCheck").style.color = "green";
        document.querySelector(".btnSignup").removeAttribute("disabled");
      } else {
        document.querySelector(".nameCheck").textContent =
          "사용중인 이름입니다.";
        document.querySelector(".nameCheck").style.color = "red";
      }
    });
  }

  function fileUpload() {
    console.log("uploading~!");
    const formData = new FormData(); // 멀티미디어 데이터는 폼데이터에 넣어서 전달
    const file = document.getElementById("userImg");

    formData.append("userImg", file.files[0]);
    console.log(formData);

    document.querySelector("div");
    axios({
      method: "POST",
      url: "/signup/imgUpload",
      data: formData,
      headers: {
        // 멀티미디어 파일 통신시 유의!
        "Content-Type": "multipart/form-data",
      },
    }).then(function (res) {
      console.log(res);
      document.querySelector("img").src = res.data.path;
    });
  }
  function showPreview(event) {
    if (event.target.files.length > 0) {
      var src = URL.createObjectURL(event.target.files[0]);
      var preview = document.getElementById("filePreview");
      preview.src = src;
      preview.style.display = "block";
    }
  }
</script>
